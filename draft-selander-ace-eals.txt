



ACE Working Group                                            G. Selander
Internet-Draft                                               Ericsson AB
Intended status: Standards Track                                 S. Raza
Expires: August 28, 2017                                       RISE SICS
                                                       February 24, 2017


               Enrollment with Application Layer Security
                     draft-selander-ace-eals-latest

Abstract

   This document specifies public key certificate enrollment procedures
   authenticated with application layer security protocols suitable for
   Internet of Things deployments.  The protocols leverage existing
   standards including Constrained Appliction Protocol (CoAP), Consise
   Binary Object Representation (CBOR) and the CBOR Object Signing and
   Encryption (COSE) format.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on August 28, 2017.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of



Selander & Raza          Expires August 28, 2017                [Page 1]

Internet-Draft Enrollment with Application Layer Security  February 2017


   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Architectural Overview  . . . . . . . . . . . . . . . . . . .   4
   3.  Enrollment Protocols  . . . . . . . . . . . . . . . . . . . .   4
     3.1.  Overview  . . . . . . . . . . . . . . . . . . . . . . . .   4
     3.2.  Simple Enrollment . . . . . . . . . . . . . . . . . . . .   5
     3.3.  Full Enrollment . . . . . . . . . . . . . . . . . . . . .   6
   4.  Security Considerations . . . . . . . . . . . . . . . . . . .   8
   5.  Privacy Considerations  . . . . . . . . . . . . . . . . . . .   8
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   8
   7.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .   8
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   8
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .   8
     8.2.  Informative References  . . . . . . . . . . . . . . . . .   9
   Appendix A.  Examples . . . . . . . . . . . . . . . . . . . . . .  10
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  10

1.  Introduction

   Security at the application layer provides an attractive option for
   protecting Internet of Things (IoT) deployments, in particular in
   constrained environments [RFC7228] or when using CoAP [RFC7252]; for
   example where transport layer security is not sufficient
   [I-D.hartke-core-e2e-security-reqs], or where it is beneficial that
   the security protocol is independent of lower layers, such as when
   securing CoAP over mixed transport protocols.

   Application layer security protocols suitable for constrained devices
   are in development, including the secure communication protocol
   OSCOAP [I-D.ietf-core-object-security], and the key exchange protocol
   EDHOC [I-D.selander-ace-cose-ecdhe].  OSCOAP defines an extension to
   the Constrained Application Protocol (CoAP) providing encryption,
   integrity and replay protection end-to-end between CoAP client and
   server based on a shared secret.  EDHOC is a key establishment
   protocol providing mutual authentication of client and server based
   on pre-shared keys, raw public keys or public key certificates, and
   establishes a shared secret with forward secrecy which may be used
   with OSCOAP.  OSCOAP and EDHOC are built upon other constrained
   device primitives developed in the IETF: CoAP, CBOR [RFC7049] and
   COSE [I-D.ietf-cose-msg], and makes only a small additional
   implementation footprint.





Selander & Raza          Expires August 28, 2017                [Page 2]

Internet-Draft Enrollment with Application Layer Security  February 2017


   Lately there has been a discussion in several IETF working groups
   about certificate enrollment protocols suitable for IoT devices, to
   enable zero-touch joining of a device in a network domain.  BRSKI
   [I-D.ietf-anima-bootstrapping-keyinfra] specifies an automated
   bootstrapping of a remote secure key infrastructure (BRSKI) using
   vendor installed X.509 certificate, in combination with a vendor
   authorized service on the Internet.  BRSKI is referencing Enrolment
   over Secure Transport (EST) [RFC7030].

   This document describes an efficient join/certificate enrollment
   procedure called Enrollment with Application Layer Security (EALS),
   using the aforementioned application layer security protocols.  For
   devices already implementing OSCOAP or EDHOC, the enrollment
   protocols re-use much of the code base and is only a minor addition.

   The problem statement from BRSKI is imported into this document.  The
   limitations of applicability to energy constrained devices due to
   credential size applies also to this document, and further work is
   needed to specify certificate formats relevant to constrained
   devices.  Having said that, one rationale for this document is a more
   optimized message exchange, which is favorable in low-power
   deployments.  Related work include
   [I-D.richardson-6tisch-dtsecurity-secure-join] which addresses the
   low-power problem statement, and [I-D.ietf-6tisch-minimal-security]
   which describes a one-touch procedure using OSCOAP and EDHOC.

1.1.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].  These
   words may also appear in this document in lowercase, absent their
   normative meanings.

   Terminology taken from [ ]

   Pledge:  the prospective device, which has the identity provided to
      at the factory.  Neither the device nor the network knows if the
      device yet knows if this device belongs with this network.

   Joined Node:  the prospective device, after having completing the
      join process, often just called a Node.

   Join Proxy (JP):  a stateless relay that provides connectivity
      between the pledge and the join registrar/coordinator.

   Join Registrar/Coordinator (JRC):  a central entity responsible for
      authentication and authorization of joining nodes.



Selander & Raza          Expires August 28, 2017                [Page 3]

Internet-Draft Enrollment with Application Layer Security  February 2017


2.  Architectural Overview

   When a pledge first joins a constrained network, it typically does
   not have IPv6 connectivity to reach the Join Registrar/Coordinator.
   For that reason, pledge communicates with the Join Proxy, a one hop
   neighbor of the pledge.  Join Proxy statelessly relays the exchanges
   between the pledge and the Join Registrar/Coordinator.

   As in the model of [I-D.ietf-6tisch-minimal-security], the Join Proxy
   plays the role of a CoAP proxy.  Default CoAP proxy, however, keeps
   state information in order to relay the response back to the
   originating client, in this case the pledge.  To mitigate Denial of
   Service attacks at the Join Proxy, [I-D.ietf-6tisch-minimal-security]
   mandates the use of a new CoAP option, Stateless-Proxy option, that
   allows the Join Proxy to operate statelessly.  The proxy adds en-
   route the state information necessary for its operation as the value
   of the Stateless-Proxy option.  The value of the Stateless-Proxy
   option is opaque to the JRC/CoAP server.  The option is echoed back
   by the JRC/CoAP server, and consumed by the proxy.  Figure 1
   illustrates the operation of the Join Proxy.

+--------+     +-------+       +--------+
| pledge |     |  JP   |       |  JRC   |
|        |     |       |       |        |
+--------+     +-------+       +--------+
    |              |                |
    +------------->|                |
    |   Request    |                |
    |              |                |
    |              +--------------->|
    |              |     Request    |       Stateless-Proxy: opaque value
    |              |                |
    |              |<---------------+
    |              |    Response    |       Stateless-Proxy: opaque value
    |              |                |
    <--------------+                |
    |   Response   |                |
    |              |                |

           Figure 1: Overview of the bootstrapping architecture.

3.  Enrollment Protocols

3.1.  Overview

   Two different certificate enrollment protocols are described in this
   document; the simple (EALS) enrollment protocol and the full (EALS)




Selander & Raza          Expires August 28, 2017                [Page 4]

Internet-Draft Enrollment with Application Layer Security  February 2017


   enrollment protocol.  The Pledge is EALS client and the Join
   Registrar/Coordinator is EALS server.

   The simple enrollment protocol is a two-pass protocol: the EALS
   client sends a certificate enrollment request and, if granted, the
   EALS server responds with a certificate.  The protocol is protected
   with OSCOAP and assumes that both EALS client and EALS server
   implement CoAP.  (The CoAP messages may, however, be carried using
   various transport protocols e.g.  UDP, TCP
   [I-D.ietf-core-coap-tcp-tls], 802.15.4 IE
   [I-D.bormann-6lo-coap-802-15-ie]).

   The full enrollment protocol is preceding the simple enrolment
   protocol with a mutual authentication, authorization and key
   establishment procedure embedded in the 3-pass EDHOC protocol.  The
   full enrollment protocol can be transported over any channel, and the
   binding to CoAP is described in this document.

3.2.  Simple Enrollment

   The simple enrollment is a 2-pass protocol between EALS client and
   EALS server.  Simple enrollment assumes that client and server has
   pre-established a shared master secret associated to the identity
   which the EALS client requesting to enroll.

   The simple enrollment protocol may be used for re-enrollment e.g. if
   a previous full enrollment procedure has been sucessfully performed.

        EALS                                                   EALS
       client                                                 server

         |                                                       |
         | POST /eals        (ObjectSecurity; Payload: PKCS#10)  |
         +------------------------------------------------------>|
         |                                                       |
         |  2.04 Changed   (ObjectSecurity; Payload: PKCS#7)     |
         |<------------------------------------------------------+
         |                                                       |


                    Figure 2: The Simple EALS Protocol.

   The protocol consists of an OSCOAP exchange using the security
   context derived from the shared master secret.  The EALS client sends
   an OSCOAP POST to /simpleeals, request payload is the certificate
   signing request (PKCS#10).  The EALS server MUST verify that the DN
   in PKCS#10 corresponds to the security context with which the




Selander & Raza          Expires August 28, 2017                [Page 5]

Internet-Draft Enrollment with Application Layer Security  February 2017


   received OSCOAP request was protected.  Since OSCOAP has sequence
   number-based replay protection, the EALS server rejects old requests.

   If the request is successful, the EALS server responds with 2.04
   Changed and returns a public key certificate (PKCS#7) matching the
   requested PKCS#10 to the EALS client.

   The protocol is entirely embedded in CoAP and is protected end-to-end
   when sent over any transport and via intermediary nodes.  One
   candidate embedding of EALS into a bootstrapping architecture is as
   described in [I-D.ietf-6tisch-minimal-security]  where the Plegde is
   EALS/CoAP client, the Join Registrar/Coordinator is EALS/CoAP server
   and Join Proxy is a CoAP proxy.

   TBD Details

   TBD Stateless proxy, recap and reference minimal security draft

3.3.  Full Enrollment

   The full enrollment procedure consists of a mutual authentication and
   authorization step, using EDHOC with an enrollment extension defined
   in this section, followed by the simple enrollment protocol
   (Section 3.2).  The EDHOC protocol [I-D.selander-ace-cose-ecdhe]
   establishes the master secret used with the simple enrollment
   protocol for first enrollment or subsequent re-enrollments.

   EDHOC is a 3-pass client-server key exchange protocol providing
   mutual authentication between client and server, allowing application
   specific extensions.  The parties may authenticate using pre-
   established keys, raw public keys or public key certificates.  The
   focus here is on the last option, where the pre-established
   certificates are by issued the manufacturer, as described in BRSKI
   [I-D.ietf-anima-bootstrapping-keyinfra].

   The EDHOC protocol is exended with an optional audit/ownership
   voucher [I-D.ietf-anima-bootstrapping-keyinfra].  The voucher is
   retrieved by the EALS server using mechanism out of scope for this
   document.  server [I-D.ietf-anima-bootstrapping-keyinfra].  The
   voucher is transported by leveraging the extensions mechanism built-
   in into EDHOC.  The extension in EDHOC message_3 is encrypted by the
   EDHOC protocol.









Selander & Raza          Expires August 28, 2017                [Page 6]

Internet-Draft Enrollment with Application Layer Security  February 2017


        EALS                                                   EALS
       client                                                 server

         |                                                       |
         |                                                       |
         +------------------------------------------------------>|
         |                                                       |
         |                    EDHOC message_1                    |
         |<------------------------------------------------------+
         |                                                       |
         |                    EDHOC message_2                    |
         +------------------------------------------------------>|
         |                                                       |
         |             EDHOC message_3  (EXT_3 = Voucher)        |
         |<------------------------------------------------------+
         |                                                       |


            Figure 3: Mutual authentication and authorization.

   The enrollment procedure described here is assuming that the EALS
   server/Join Registrar/Coordinator is EDHOC client, see figure
   Figure 3.  This setting has the properties that the

   1.  The EALS server initiates the protocol

   2.  The EALS client is authenticed first (EDHOC message_2)

   Item 1. allows the EALS server to orchestrate many concurrent
   enrollments.  Item 2. allows the the EALS server to authenticate and
   authorize the EALS client before completing the protocol.

   For certain deployment settings the reverse roles may be favorable,
   and it is straightforward to embed the enrolment protocol in EDHOC
   with interchanged roles.  The details are FFS.

   TBD Detail the protocol

   TBD CoAP binding.  Same as in EDHOC?

   TBD name of resource?  POST /fulleals?

   TBD CoAP Response codes to communicate success or failure of the EALS
   function?







Selander & Raza          Expires August 28, 2017                [Page 7]

Internet-Draft Enrollment with Application Layer Security  February 2017


4.  Security Considerations

5.  Privacy Considerations

   TODO

6.  IANA Considerations

7.  Acknowledgments

   The authors wants to thank

8.  References

8.1.  Normative References

   [I-D.ietf-core-object-security]
              Selander, G., Mattsson, J., Palombini, F., and L. Seitz,
              "Object Security of CoAP (OSCOAP)", draft-ietf-core-
              object-security-01 (work in progress), December 2016.

   [I-D.ietf-cose-msg]
              Schaad, J., "CBOR Object Signing and Encryption (COSE)",
              draft-ietf-cose-msg-24 (work in progress), November 2016.

   [I-D.selander-ace-cose-ecdhe]
              Selander, G., Mattsson, J., and F. Palombini, "Ephemeral
              Diffie-Hellman Over COSE (EDHOC)", draft-selander-ace-
              cose-ecdhe-04 (work in progress), October 2016.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC7049]  Bormann, C. and P. Hoffman, "Concise Binary Object
              Representation (CBOR)", RFC 7049, DOI 10.17487/RFC7049,
              October 2013, <http://www.rfc-editor.org/info/rfc7049>.

   [RFC7252]  Shelby, Z., Hartke, K., and C. Bormann, "The Constrained
              Application Protocol (CoAP)", RFC 7252,
              DOI 10.17487/RFC7252, June 2014,
              <http://www.rfc-editor.org/info/rfc7252>.








Selander & Raza          Expires August 28, 2017                [Page 8]

Internet-Draft Enrollment with Application Layer Security  February 2017


8.2.  Informative References

   [I-D.bormann-6lo-coap-802-15-ie]
              Bormann, C., "Constrained Application Protocol (CoAP) over
              IEEE 802.15.4 Information Element for IETF", draft-
              bormann-6lo-coap-802-15-ie-00 (work in progress), April
              2016.

   [I-D.hartke-core-e2e-security-reqs]
              Selander, G., Palombini, F., and K. Hartke, "Requirements
              for CoAP End-To-End Security", draft-hartke-core-e2e-
              security-reqs-02 (work in progress), January 2017.

   [I-D.ietf-6tisch-minimal-security]
              Vucinic, M., Simon, J., and K. Pister, "Minimal Security
              Framework for 6TiSCH", draft-ietf-6tisch-minimal-
              security-01 (work in progress), February 2017.

   [I-D.ietf-anima-bootstrapping-keyinfra]
              Pritikin, M., Richardson, M., Behringer, M., Bjarnason,
              S., and K. Watsen, "Bootstrapping Remote Secure Key
              Infrastructures (BRSKI)", draft-ietf-anima-bootstrapping-
              keyinfra-04 (work in progress), October 2016.

   [I-D.ietf-core-coap-tcp-tls]
              Bormann, C., Lemay, S., Tschofenig, H., Hartke, K.,
              Silverajan, B., and B. Raymor, "CoAP (Constrained
              Application Protocol) over TCP, TLS, and WebSockets",
              draft-ietf-core-coap-tcp-tls-06 (work in progress),
              February 2017.

   [I-D.richardson-6tisch-dtsecurity-secure-join]
              Richardson, M., "6tisch Secure Join protocol", draft-
              richardson-6tisch-dtsecurity-secure-join-01 (work in
              progress), October 2016.

   [RFC7030]  Pritikin, M., Ed., Yee, P., Ed., and D. Harkins, Ed.,
              "Enrollment over Secure Transport", RFC 7030,
              DOI 10.17487/RFC7030, October 2013,
              <http://www.rfc-editor.org/info/rfc7030>.

   [RFC7228]  Bormann, C., Ersue, M., and A. Keranen, "Terminology for
              Constrained-Node Networks", RFC 7228,
              DOI 10.17487/RFC7228, May 2014,
              <http://www.rfc-editor.org/info/rfc7228>.






Selander & Raza          Expires August 28, 2017                [Page 9]

Internet-Draft Enrollment with Application Layer Security  February 2017


Appendix A.  Examples

Authors' Addresses

   Goeran Selander
   Ericsson AB
   Farogatan 6
   Kista  SE-16480 Stockholm
   Sweden

   Email: goran.selander@ericsson.com


   Shahid Raza
   RISE SICS
   Isafjordsgatan 22
   Kista  SE-16440 Stockholm
   Sweden

   Email: shahid@sics.se































Selander & Raza          Expires August 28, 2017               [Page 10]
