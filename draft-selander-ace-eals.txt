



ACE Working Group                                            G. Selander
Internet-Draft                                               Ericsson AB
Intended status: Standards Track                                 S. Raza
Expires: September 2, 2017                                     RISE SICS
                                                          March 01, 2017


               Enrollment with Application Layer Security
                     draft-selander-ace-eals-latest

Abstract

   This document specifies public key certificate enrollment procedures
   authenticated with application layer security protocols suitable for
   Internet of Things deployments.  The protocols leverage existing IoT
   standards including Constrained Appliction Protocol (CoAP), Consise
   Binary Object Representation (CBOR) and the CBOR Object Signing and
   Encryption (COSE) format.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 2, 2017.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of



Selander & Raza         Expires September 2, 2017               [Page 1]

Internet-Draft Enrollment with Application Layer Security     March 2017


   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Simple Enrollment . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Establishment of Master Secret  . . . . . . . . . . . . . . .   5
     3.1.  ACE . . . . . . . . . . . . . . . . . . . . . . . . . . .   5
     3.2.  EDHOC . . . . . . . . . . . . . . . . . . . . . . . . . .   6
   4.  Application to 6tisch . . . . . . . . . . . . . . . . . . . .   8
   5.  Architectural Overview  . . . . . . . . . . . . . . . . . . .   9
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .  10
   7.  Privacy Considerations  . . . . . . . . . . . . . . . . . . .  10
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  10
   9.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  10
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     10.1.  Normative References . . . . . . . . . . . . . . . . . .  10
     10.2.  Informative References . . . . . . . . . . . . . . . . .  11
   Appendix A.  Examples . . . . . . . . . . . . . . . . . . . . . .  12
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  12

1.  Introduction

   Security at the application layer provides an attractive option for
   protecting Internet of Things (IoT) deployments, in particular in
   constrained environments [RFC7228] and when using CoAP [RFC7252]; for
   example where transport layer security is not sufficient
   [I-D.hartke-core-e2e-security-reqs], or where it is beneficial that
   the security protocol is independent of lower layers, such as when
   securing CoAP over mixed transport protocols.

   Application layer security protocols suitable for constrained devices
   are in development, including the secure communication protocol
   OSCOAP [I-D.ietf-core-object-security].  OSCOAP defines an extension
   to the Constrained Application Protocol (CoAP) providing encryption,
   integrity and replay protection end-to-end between CoAP client and
   server based on a shared secret.  The shared secret can be
   established in different ways e.g. using a trusted third party such
   as in ACE [I-D.ietf-ace-oauth-authz], or using a key exchange
   protocol such as EDHOC [I-D.selander-ace-cose-ecdhe].  OSCOAP and
   EDHOC are built upon other constrained device primitives developed in
   the IETF: CoAP, CBOR [RFC7049] and COSE [I-D.ietf-cose-msg], and
   makes only a small additional implementation footprint.

   Lately, there has been a discussion in several IETF working groups
   about certificate enrollment protocols suitable for IoT devices, to



Selander & Raza         Expires September 2, 2017               [Page 2]

Internet-Draft Enrollment with Application Layer Security     March 2017


   support the use case of an IoT device joining a new network domain
   and establishing credentials valid in this domain.  This document
   describes Enrollment with Application Layer Security (EALS), a
   certificate enrollment procedure based on the Simple PKI Requests and
   Responses of CMC [RFC5272].  EALS uses OSCOAP as a channel for the
   enrollment protocol, and describes how ACE and EDHOC can be used for
   establishing an authenticated and authorized channel.

   This work is inspired by the Enrollment over Secure Transport (EST)
   protocol [RFC7030], which also is based on CMC, but EALS is secured
   on application layer instead of on transport layer.

1.1.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].  These
   words may also appear in this document in lowercase, absent their
   normative meanings.

2.  Simple Enrollment

   This section describes the simple enrollment protocol which is an
   embedding of the Simple PKI Request/Response protocol of CMC
   [RFC5272] in Object Secure CoAP (OSCOAP)
   [I-D.ietf-core-object-security].

   The simple enrollment protocol is a 2-pass protocol between EALS
   client and EALS server, see Figure 1.  The protocol assumes that both
   EALS client and EALS server implement CoAP, and the Object-Security
   option of CoAP (OSCOAP).

        EALS                                                   EALS
       client                                                 server

         |                                                       |
         | POST /eals      (Object-Security; Payload: PKCS #10)  |
         +------------------------------------------------------>|
         |                                                       |
         |  2.04 Changed   (Object-Security; Payload: PKCS #7)   |
         |<------------------------------------------------------+
         |                                                       |


                 Figure 1: The Simple Enrollment Protocol.

   The simple enrollment protocol consists of a CoAP message exchange.




Selander & Raza         Expires September 2, 2017               [Page 3]

Internet-Draft Enrollment with Application Layer Security     March 2017


   The EALS client sends a CoAP request:

   o  Method if POST

   o  Uri-Path is "eals"

   o  Object-Security option is present

   o  Payload is the CMC Simple PKI Request [RFC5272] (i.e. a PKCS #10
      certification request).

   If successful, the EALS server sends a CoAP response:

   o  Code is 2.04 (Changed)

   o  Content-Format is "application/pkcs7-mime" (TBD)

   o  Object-Security option is present

   o  Payload is a certs-only CMC Simple PKI Response [RFC5272] (i.e the
      issued certificate)

   OSCOAP protects the CoAP message exchange between the endpoints over
   any transport and via intermediary nodes.  The OSCOAP protection
   requires that a security context is shared between client and server,
   and the security context can be derived from a set of Input
   Parameters (Section 3.3 of [I-D.ietf-core-object-security]):

   o  Master Secret

   o  Sender ID

   o  Recipient ID

   The server MUST verify that the Master Secret is associated to the
   Distinguished Name for which the client is requesting a certificate.
   Examples of how these input parameters are established in client and
   server are described in Section 3.

   Note 1: The encodings and formats used in CMC may later be updated
   with other equivalents more adapted to constrained environments.

   Note 2: OSCOAP protects the CoAP message exchange independent of
   underlying protocol e.g.  UDP, TCP [I-D.ietf-core-coap-tcp-tls], or
   802.15.4 IE [I-D.bormann-6lo-coap-802-15-ie].

   TBD: Further details




Selander & Raza         Expires September 2, 2017               [Page 4]

Internet-Draft Enrollment with Application Layer Security     March 2017


3.  Establishment of Master Secret

   In order to deploy OSCOAP between EALS client and EALS server, the
   OSCOAP input parameters needs to established (Section 3.3 of
   [I-D.ietf-core-object-security]), in particular a master secret.  In
   this section we present two application layer protocols for
   establishing the input parameters: the authorization protocol ACE and
   the key exchange protocol EDHOC.

3.1.  ACE

   The ACE protocol framework [I-D.ietf-ace-oauth-authz] is an
   adaptation of OAuth 2.0 to IoT environments.  ACE describes different
   message flows for a Client to get authorized access to a Resource
   Server (RS) by leveraging an Authorization Server (AS).

   The Token Introspection flow (Section 7 of
   [I-D.ietf-ace-oauth-authz]) allows an RS to access authorization
   information relating to a client provided access token.  If the
   access token is valid, the RS obtains information about the access
   rights and key of the client, and also a client token containing the
   same shared key protected for the legitimate client (Section 7.4 of
   [I-D.ietf-ace-oauth-authz], Figure 2).

   By mapping the EALS client and server to the ACE client and resource
   server, respectively, this application of ACE enables the
   authorization of EALS client and establishment of a shared The access
   token is in this case not bound to a particular resource server and
   could be provisioned to the client during manufacture. key, which can
   be used as master secret with OSCOAP in the simple enrollment
   protocol in Section 2.  The access rights include the right to get
   enrolled in this key infrastructure.



















Selander & Raza         Expires September 2, 2017               [Page 5]

Internet-Draft Enrollment with Application Layer Security     March 2017


                                  Resource       Authorization
                 Client            Server           Server
                    |                |                |
                    |                |                |
                    +--------------->|                |
                    |  POST          |                |
                    |  Access Token  |                |
                    |                +--------------->|
                    |                | Introspection  |
                    |                |    Request     |
                    |                |                |
                    |                +<---------------+
                    |                | Introspection  |
                    |                |   Response     |
                    |                | + Client Token |
                    |<---------------+                |
                    |  2.01 Created  |                |
                    | + Client Token |



           Figure 2: ACE Token Introspection with Client Token.

   TBD: Specify how to carry OSCOAP input parameters in the client token

   TBD: Optionally include authorization information about the server in
   the client token, for the benefit of the client authorizing the
   enrollment, e.g. voucher relating to ownership of client.

3.2.  EDHOC

   EDHOC [I-D.selander-ace-cose-ecdhe] is a key establishment protocol
   encoded with CBOR and using COSE that may be transported with e.g.
   CoAP.

   EDHOC provides mutual authentication of client and server based on
   pre-shared keys, raw public keys or public key certificates.  EDHOC
   establishes a shared secret with forward secrecy which may be used by
   different applications, such as by OSCOAP in the simple enrollment
   protocol, Section 2.

   EDHOC also negotiates the algorithm the application will use with the
   master secret, and allows application specific extentions and key
   derivation.







Selander & Raza         Expires September 2, 2017               [Page 6]

Internet-Draft Enrollment with Application Layer Security     March 2017


        Party U                                             Party V
           |                   E_U, EXT_1                     |
           +------------------------------------------------->|
           |                                                  |
           |      E_V, AEAD(EXT_2, ID_V, Sig(V; E_U, E_V))    |
           |<-------------------------------------------------+
           |                                                  |
           |         AEAD(EXT_3, ID_U, Sig(U; E_V, E_U))      |
           +------------------------------------------------->|
           |                                                  |



              Figure 3: The EDHOC protocol (simplification).

   To address the authorization aspects the EDHOC protocol is exended
   with an optional audit/ownership voucher
   [I-D.ietf-anima-bootstrapping-keyinfra].  The voucher is retrieved by
   the EALS server using mechanism out of scope for this document.  The
   voucher is transported by leveraging the extensions mechanism built-
   in into EDHOC.  The extension in EDHOC message_3 is encrypted by the
   EDHOC protocol.

      EALS                                     EALS
     client                                   server

       |                                        |
       |                                        |
       +--------------------------------------->|
       |                                        |
       |             EDHOC message_1            |
       |<---------------------------------------+
       |                                        |
       |    EDHOC message_2   (EXT_2 = Nonce)   |
       +--------------------------------------->|    Third party
       |                                        | <----------------->
       |    EDHOC message_3  (EXT_3 = Voucher)  |    authorization
       |<---------------------------------------+
       |                                        |


                         Figure 4: EDHOC in EALS.

   The enrollment procedure described here is assuming that the EALS
   server/Join Registrar/Coordinator is EDHOC client, see figure
   Figure 4.  This setting has the properties that the

   1.  The EALS server initiates the protocol



Selander & Raza         Expires September 2, 2017               [Page 7]

Internet-Draft Enrollment with Application Layer Security     March 2017


   2.  The EALS client is authenticed first (EDHOC message_2)

   Item 1. allows the EALS server to orchestrate many concurrent
   enrollments.  Item 2. allows the the EALS server to authenticate and
   authorize the EALS client before completing the protocol.

   For certain deployment settings the reverse roles may be favorable,
   and it is straightforward to embed the enrolment protocol in EDHOC
   with interchanged roles.  The details are FFS.

   TBD Detail the protocol

   TBD CoAP binding.  Same as in EDHOC?

   TBD name of resource?  POST /edhoc?

   TBD CoAP Response codes to communicate success or failure of the EALS
   function?

4.  Application to 6tisch

   Terminology

   The Pledge is EALS client and the Join Registrar/Coordinator is EALS
   server.

   One candidate embedding of EALS into a bootstrapping architecture is
   as described in [I-D.ietf-6tisch-minimal-security]  where the Plegde
   is EALS/CoAP client, the Join Registrar/Coordinator is EALS/CoAP
   server and Join Proxy is a CoAP proxy.

   Stateless proxy, recap and reference minimal security draft

   BRSKI [I-D.ietf-anima-bootstrapping-keyinfra] specifies an automated
   bootstrapping of a remote secure key infrastructure (BRSKI) using
   vendor installed X.509 certificate, in combination with a vendor
   authorized service on the Internet.  BRSKI is referencing Enrolment
   over Secure Transport (EST) [RFC7030].

   , to enable zero-touch joining of a device in a network domain

   One application of EALS is to the BRSKI
   [I-D.ietf-anima-bootstrapping-keyinfra] problem statement.  BRSKI
   deals with automated bootstrapping of new devices using vendor
   installed X.509 certificate, in combination with a vendor authorized
   service on the Internet.  The following terminology is used





Selander & Raza         Expires September 2, 2017               [Page 8]

Internet-Draft Enrollment with Application Layer Security     March 2017


   Pledge:  the prospective device, which has the identity provided to
      at the factory.  Neither the device nor the network knows if the
      device yet knows if this device belongs with this network.

   Joined Node:  the prospective device, after having completing the
      join process, often just called a Node.

   Join Proxy (JP):  a stateless relay that provides connectivity
      between the pledge and the join registrar/coordinator.

   Join Registrar/Coordinator (JRC):  a central entity responsible for
      authentication and authorization of joining nodes.  Bootstrapping
      a new device can occur using a routable address and a cloud
      service, or using only link-local connectivity, or on limited/
      disconnected networks.  Support for lower security models,
      including devices with minimal identity, is described for legacy
      reasons but not encouraged.  Bootstrapping is complete when the
      cryptographic identity of the new key infrastructure is
      successfully deployed to the device but the established secure
      connection can be used to deploy a locally issued certificate to
      the device as well.

   The problem statement from BRSKI is imported into this document.  The
   limitations of applicability to energy constrained devices due to
   credential size applies also to this document, and further work is
   needed to specify certificate formats relevant to constrained
   devices.  Having said that, one rationale for this document is a more
   optimized message exchange, which is favorable in low-power
   deployments.  Related work include
   [I-D.richardson-6tisch-dtsecurity-secure-join] which addresses the
   low-power problem statement, and [I-D.ietf-6tisch-minimal-security]
   which describes a one-touch procedure using OSCOAP and EDHOC.

5.  Architectural Overview

   When a pledge first joins a constrained network, it typically does
   not have IPv6 connectivity to reach the Join Registrar/Coordinator.
   For that reason, pledge communicates with the Join Proxy, a one hop
   neighbor of the pledge.  Join Proxy statelessly relays the exchanges
   between the pledge and the Join Registrar/Coordinator.

   As in the model of [I-D.ietf-6tisch-minimal-security], the Join Proxy
   plays the role of a CoAP proxy.  Default CoAP proxy, however, keeps
   state information in order to relay the response back to the
   originating client, in this case the pledge.  To mitigate Denial of
   Service attacks at the Join Proxy, [I-D.ietf-6tisch-minimal-security]
   mandates the use of a new CoAP option, Stateless-Proxy option, that
   allows the Join Proxy to operate statelessly.  The proxy adds en-



Selander & Raza         Expires September 2, 2017               [Page 9]

Internet-Draft Enrollment with Application Layer Security     March 2017


   route the state information necessary for its operation as the value
   of the Stateless-Proxy option.  The value of the Stateless-Proxy
   option is opaque to the JRC/CoAP server.  The option is echoed back
   by the JRC/CoAP server, and consumed by the proxy.  Figure 5
   illustrates the operation of the Join Proxy.

   +--------+     +-------+       +--------+
   | pledge |     |  JP   |       |  JRC   |
   |        |     |       |       |        |
   +--------+     +-------+       +--------+
       |              |                |
       +------------->|                |
       |   Request    |                |
       |              |                |
       |              +--------------->|
       |              |     Request    |  Stateless-Proxy: opaque value
       |              |                |
       |              |<---------------+
       |              |    Response    |  Stateless-Proxy: opaque value
       |              |                |
       <--------------+                |
       |   Response   |                |
       |              |                |

           Figure 5: Overview of the bootstrapping architecture.

6.  Security Considerations

7.  Privacy Considerations

   TODO

8.  IANA Considerations

9.  Acknowledgments

   The authors wants to thank

10.  References

10.1.  Normative References

   [I-D.ietf-core-object-security]
              Selander, G., Mattsson, J., Palombini, F., and L. Seitz,
              "Object Security of CoAP (OSCOAP)", draft-ietf-core-
              object-security-01 (work in progress), December 2016.





Selander & Raza         Expires September 2, 2017              [Page 10]

Internet-Draft Enrollment with Application Layer Security     March 2017


   [I-D.ietf-cose-msg]
              Schaad, J., "CBOR Object Signing and Encryption (COSE)",
              draft-ietf-cose-msg-24 (work in progress), November 2016.

   [I-D.selander-ace-cose-ecdhe]
              Selander, G., Mattsson, J., and F. Palombini, "Ephemeral
              Diffie-Hellman Over COSE (EDHOC)", draft-selander-ace-
              cose-ecdhe-04 (work in progress), October 2016.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC7049]  Bormann, C. and P. Hoffman, "Concise Binary Object
              Representation (CBOR)", RFC 7049, DOI 10.17487/RFC7049,
              October 2013, <http://www.rfc-editor.org/info/rfc7049>.

   [RFC7252]  Shelby, Z., Hartke, K., and C. Bormann, "The Constrained
              Application Protocol (CoAP)", RFC 7252,
              DOI 10.17487/RFC7252, June 2014,
              <http://www.rfc-editor.org/info/rfc7252>.

10.2.  Informative References

   [I-D.bormann-6lo-coap-802-15-ie]
              Bormann, C., "Constrained Application Protocol (CoAP) over
              IEEE 802.15.4 Information Element for IETF", draft-
              bormann-6lo-coap-802-15-ie-00 (work in progress), April
              2016.

   [I-D.hartke-core-e2e-security-reqs]
              Selander, G., Palombini, F., and K. Hartke, "Requirements
              for CoAP End-To-End Security", draft-hartke-core-e2e-
              security-reqs-02 (work in progress), January 2017.

   [I-D.ietf-6tisch-minimal-security]
              Vucinic, M., Simon, J., and K. Pister, "Minimal Security
              Framework for 6TiSCH", draft-ietf-6tisch-minimal-
              security-01 (work in progress), February 2017.

   [I-D.ietf-ace-oauth-authz]
              Seitz, L., Selander, G., Wahlstroem, E., Erdtman, S., and
              H. Tschofenig, "Authentication and Authorization for
              Constrained Environments (ACE)", draft-ietf-ace-oauth-
              authz-05 (work in progress), February 2017.





Selander & Raza         Expires September 2, 2017              [Page 11]

Internet-Draft Enrollment with Application Layer Security     March 2017


   [I-D.ietf-anima-bootstrapping-keyinfra]
              Pritikin, M., Richardson, M., Behringer, M., Bjarnason,
              S., and K. Watsen, "Bootstrapping Remote Secure Key
              Infrastructures (BRSKI)", draft-ietf-anima-bootstrapping-
              keyinfra-04 (work in progress), October 2016.

   [I-D.ietf-core-coap-tcp-tls]
              Bormann, C., Lemay, S., Tschofenig, H., Hartke, K.,
              Silverajan, B., and B. Raymor, "CoAP (Constrained
              Application Protocol) over TCP, TLS, and WebSockets",
              draft-ietf-core-coap-tcp-tls-06 (work in progress),
              February 2017.

   [I-D.richardson-6tisch-dtsecurity-secure-join]
              Richardson, M., "6tisch Secure Join protocol", draft-
              richardson-6tisch-dtsecurity-secure-join-01 (work in
              progress), October 2016.

   [RFC5272]  Schaad, J. and M. Myers, "Certificate Management over CMS
              (CMC)", RFC 5272, DOI 10.17487/RFC5272, June 2008,
              <http://www.rfc-editor.org/info/rfc5272>.

   [RFC7030]  Pritikin, M., Ed., Yee, P., Ed., and D. Harkins, Ed.,
              "Enrollment over Secure Transport", RFC 7030,
              DOI 10.17487/RFC7030, October 2013,
              <http://www.rfc-editor.org/info/rfc7030>.

   [RFC7228]  Bormann, C., Ersue, M., and A. Keranen, "Terminology for
              Constrained-Node Networks", RFC 7228,
              DOI 10.17487/RFC7228, May 2014,
              <http://www.rfc-editor.org/info/rfc7228>.

Appendix A.  Examples

Authors' Addresses

   Goeran Selander
   Ericsson AB
   Farogatan 6
   Kista  SE-16480 Stockholm
   Sweden

   Email: goran.selander@ericsson.com








Selander & Raza         Expires September 2, 2017              [Page 12]

Internet-Draft Enrollment with Application Layer Security     March 2017


   Shahid Raza
   RISE SICS
   Isafjordsgatan 22
   Kista  SE-16440 Stockholm
   Sweden

   Email: shahid@sics.se












































Selander & Raza         Expires September 2, 2017              [Page 13]
